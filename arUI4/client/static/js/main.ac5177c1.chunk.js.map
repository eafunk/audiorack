{"version":3,"sources":["dataProvider.js","authProvider.js","users.js","files.js","http.js","library.js","studios.js","browse.js","App.js","reportWebVitals.js","index.js"],"names":["httpClient","fetchUtils","fetchJson","apiUrl","dataProv","locName","delParams","getList","resource","params","query","dirs","split","Promise","resolve","reject","status","message","type","location","filter","q","match","pagination","page","perPage","range","sort","sortBy","field","order","url","join","method","body","JSON","stringify","then","headers","data","json","total","parseInt","get","pop","getOne","respar","push","id","getMany","promises","ids","map","item","all","results","getManyReference","target","passParam","update","updateMany","create","theID","insertId","delete","previousData","deleteMany","genPasswordHash","password","hash","salt","setLoc","setDelParams","paramObj","auth","cred","login","username","request","Request","Headers","fetch","response","Error","statusText","obj","logout","catch","err","checkError","checkAuth","checkWho","getPermissions","permission","getIdentity","fullName","UserTitle","record","UserList","permissions","props","isSmall","useMediaQuery","theme","breakpoints","down","List","exporter","SimpleList","primaryText","secondaryText","Datagrid","rowClick","TextField","source","label","sortable","EditButton","UserEdit","Edit","title","transform","newpassword","dataProvider","resp","SimpleForm","TextInput","disabled","PasswordInput","SelectInput","choices","name","UserCreate","Create","validate","values","errors","initialValue","FileTitle","FileList","FileEdit","FileCreate","HttpTitle","HttpList","HttpEdit","HttpCreate","LibraryTitle","LibraryList","LibraryEdit","LibraryCreate","StudioTitle","StudioList","NumberField","StudioEdit","NumberInput","StudioCreate","defaultValue","PostFilter","Filter","alwaysOn","BrowseList","filters","Label","Duration","useStyles","makeStyles","flex","textOverflow","whiteSpace","overflow","spacer","MyAppBar","classes","AppBar","Typography","variant","color","className","MyLayout","Layout","appBar","App","Admin","layout","authProvider","disableTelemetry","Resource","list","edit","options","icon","SettingsIcon","LibraryMusicIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac5177c1.chunk.js","sourcesContent":["import { fetchUtils } from 'react-admin';\nconst httpClient = fetchUtils.fetchJson;\nconst apiUrl = '';\n\nvar dataProv = {\n\tlocName: \"\",\n\t\n\tdelParams: {},\n\t\n\tgetList: (resource, params) => {\n\t\tlet query = {};\n\t\tlet dirs = resource.split('/');\n\t\tif(dirs[0] == \"config\"){\t// /config\n\t\t\tdirs[0] = 'getconf';\n\t\t}else if(dirs[1] && (dirs[0] == \"library\")){\n\t\t\tif(dirs[1] == \"browse\"){\n\t\t\t\tquery = {type: 'artist'};\n\t\t\t}else if(dirs[1] == \"logs\"){\n\t\t\t\tparams.location = dataProv.locName;\n\t\t\t}else if(dirs[1] == \"sched\"){\n\t\t\t\tparams.location = dataProv.locName;\n\t\t\t}else{ // /library/table\n\t\t\t\tdirs[0] = 'library/get';\n\t\t\t}\n\t\t}else{\n\t\t\t// bad apiFuction\n\t\t\treturn new Promise((resolve, reject) => { reject({status: 400, message: \"Bad Request: invalid API function\"}) });\n\t\t}\n\t\t\n\t\t// note: filter and sort are ignored by config API\n\t\tif(params.filter){\n\t\t\tif(params.filter.q){\t// convert q to API match format for browse\n\t\t\t\tlet match = \"%\"+params.filter.q+\"%\";\n\t\t\t\tdelete params.filter.q;\n\t\t\t\tquery = {...query, match: match};\n\t\t\t}\n\t\t\t// column1: value1, ...\n\t\t\tquery = {...query, ...params.filter};\n\t\t}else\n\t\t\tquery = {};\n\t\tif(params.pagination){\n\t\t\t// my API range:[first, last]\n\t\t\tconst { page, perPage } = params.pagination;\n\t\t\tlet range = [(page - 1) * perPage, page * perPage - 1];\n\t\t\tquery = { ...query, range: range};\n\t\t}\n\t\tif(params.sort){\n\t\t\t// my API sortBy: sort columns, comma separated list, prepended with \"-\" for desending order\n\t\t\tconst { field, order } = params.sort;\n\t\t\tlet sortBy = field;\n\t\t\tif(order == 'DESC')\n\t\t\t\tsortBy = '-'+sortBy;\n\t\t\tquery = { ...query, sortBy: sortBy};\n\t\t}\n\t\t\n\t\tlet url = apiUrl + dirs.join('/');\n\t\treturn httpClient(url, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(query)\n\t\t}).then(({ headers, json }) => ({\n\t\t\tdata: json,\n\t\t\ttotal: parseInt(headers.get('content-range').split('/').pop(), 10)\n\t\t}));\n\t},\n\n\tgetOne: (resource, params) => {\n\t\tlet dirs = resource.split('/');\n\t\tlet respar = {};\n\t\tif(dirs[1] && (dirs[0] == \"config\"))\t// /config\n\t\t\tdirs[0] = 'getconf';\n\t\telse if(dirs[1] && dirs[0] == \"library\"){\n\t\t\tif(dirs[1] == \"item\")\n\t\t\t\tdirs[0] = 'library/item';\n\t\t\telse if(dirs[1] == \"resolve\"){\n\t\t\t\tdirs[0] = 'library/item';\n\t\t\t\trespar = { resolve: 1 };\n\t\t\t}else\n\t\t\t\tdirs[0] = 'library/get';\n\t\t}else{\n\t\t\t// bad apiFuction\n\t\t\treturn new Promise((resolve, reject) => { reject({status: 400, message: \"Bad Request: invalid API function\"}) });\n\t\t}\n\t\tdirs.push(params.id);\n\t\tlet url = apiUrl + dirs.join('/');\n\t\treturn httpClient(url, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(respar)\n\t\t}).then(({ headers, json }) => ({\n\t\t\tdata: json[0]\n\t\t}));\n\t},\n\n\tgetMany: (resource, params) => {\n\t\tlet dirs = resource.split('/');\n\t\tlet respar = {};\n\t\tif(dirs[1] && (dirs[0] == \"config\"))\t// /config\n\t\t\tdirs[0] = 'getconf';\n\t\telse if(dirs[1] && dirs[0] == \"library\"){\n\t\t\tif(dirs[1] == \"item\")\n\t\t\t\tdirs[0] = 'library/item';\n\t\t\telse if(dirs[1] == \"resolve\"){\n\t\t\t\tdirs[0] = 'library/item';\n\t\t\t\trespar = { resolve: 1 };\n\t\t\t}else\n\t\t\t\tdirs[0] = 'library/get';\n\t\t}else{\n\t\t\t// bad apiFuction\n\t\t\treturn new Promise((resolve, reject) => { reject({status: 400, message: \"Bad Request: invalid API function\"}) });\n\t\t}\n\t\tlet promises = params.ids.map( (item) => {\n\t\t\tlet url = apiUrl + dirs.join('/') + '/' + item;\n\t\t\treturn httpClient(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(respar)\n\t\t\t}).then(({ headers, json }) => (json[0]));\n\t\t});\n\t\t\n\t\treturn Promise.all(promises).then(({results}) => ({ data: results }));\n\t},\n\n\tgetManyReference: (resource, params) => {\n\t\tlet filter = {...params.filter};\n\t\tfilter[params.target] = params.id;\n\t\tlet passParam = { \n\t\t\tpagination: params.pagination, \n\t\t\tsort: params.sort,\n\t\t\tfilter: filter\n\t\t}\n\t\treturn dataProv.getList(resource, passParam);\n\t},\n\n\tupdate: (resource, params) => {\n\t\tlet dirs = resource.split('/');\n\t\tif(dirs[1] && (dirs[0] == \"config\")){\t// /config\n\t\t\tdirs[0] = 'setconf';\n\t\t}else if(dirs[1] && (dirs[0] == \"library\")){\n\t\t\tdirs[0] = 'library/set';\n\t\t}else{\n\t\t\t// bad apiFuction\n\t\t\treturn new Promise((resolve, reject) => { reject({status: 400, message: \"Bad Request: invalid API function\"}) });\n\t\t}\n\t\tdelete params.data.id;\n\t\t\n\t\tdirs.push(params.id);\n\t\tlet url = apiUrl + dirs.join('/');\n\t\treturn httpClient(url, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(params.data)\n\t\t}).then(({ headers, json }) => ({\n\t\t\tdata: { id:params.id, ...params.data }\n\t\t}));\n\t},\n\n\tupdateMany: (resource, params) => {\n\t\tlet dirs = resource.split('/');\n\t\tif(dirs[1] && (dirs[0] == \"config\")){\t// /config\n\t\t\tdirs[0] = 'setconf';\n\t\t}else if(dirs[1] && (dirs[0] == \"library\")){\n\t\t\tdirs[0] = 'library/set';\n\t\t}else{\n\t\t\t// bad apiFuction\n\t\t\treturn new Promise((resolve, reject) => { reject({status: 400, message: \"Bad Request: invalid API function\"}) });\n\t\t}\n\t\tdelete params.data.id;\n\t\t\n\t\tlet promises = params.ids.map( (item) => {\n\t\t\tlet url = apiUrl + dirs.join('/') + '/' + item;\n\t\t\treturn httpClient(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(params.data)\n\t\t\t}).then(() => (item));\n\t\t});\n\t\t\n\t\treturn Promise.all(promises).then(({results}) => ({ data: results }));\n\t},\n\n\tcreate: (resource, params) => {\n\t\tlet dirs = resource.split('/');\n\t\tif(dirs[1] && (dirs[0] == \"config\")){\t// /config\n\t\t\t// Note: This is the same as update... the API creates if the object doesn't exist\n\t\t\tdirs[0] = 'setconf';\n\t\t\tdirs.push(params.data.id); // an id MUST be specified in the data for the new entry/object\n\t\t\tlet theID = params.data.id;\n\t\t\tdelete params.data.id;\t// make sure no id is specified, to prevent an update of existing record.\n\t\t\tlet url = apiUrl + dirs.join('/');\n\t\t\treturn httpClient(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(params.data)\n\t\t\t}).then(({ headers, json }) => ({\n\t\t\t\tdata: { id: theID, ...params.data }\n\t\t\t}));\n\t\t}else if(dirs[1] && (dirs[0] == \"library\")){\n\t\t\t// This is NOT that same as the update API.  No ID is specified and a new row is created.\n\t\t\tdirs[0] = 'library/set';\n\t\t\tdelete params.data.id;\t// make sure no id is specified, to prevent an update of existing record.\n\t\t\tlet url = apiUrl + dirs.join('/');\n\t\t\treturn httpClient(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(params.data)\n\t\t\t}).then(({ headers, json }) => ({\n\t\t\t\t// this is for config only, where an id is always specified.\n\t\t\t\tdata: { id: json.insertId, ...params.data }\n\t\t\t}));\n\t\t}else{\n\t\t\t// bad apiFuction\n\t\t\treturn new Promise((resolve, reject) => { reject({status: 400, message: \"Bad Request: invalid API function\"}) });\n\t\t}\n\t},\n\n\tdelete: (resource, params) => {\n\t\t// must call setDelParams() just before this to pass extra paramteres, like reassign, delete (file), etc.\n\t\tlet dirs = resource.split('/');\n\t\tif(dirs[1] && (dirs[0] == \"config\")){\t// /config\n\t\t\tdirs[0] = 'delconf';\n\t\t}else if(dirs[1] && (dirs[0] == \"library\")){\n\t\t\tdirs[0] = 'library/deleteID';\n\t\t}else{\n\t\t\t// bad apiFuction\n\t\t\treturn new Promise((resolve, reject) => { reject({status: 400, message: \"Bad Request: invalid API function\"}) });\n\t\t}\n\t\tdirs.push(params.id);\n\t\tlet url = apiUrl + dirs.join('/');\n\t\treturn httpClient(url, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(dataProv.delParams)\n\t\t}).then(() => {\n\t\t\tdataProv.delParams = {};\n\t\t\treturn { data: { id: params.id, ...params.previousData } };\n\t\t});\n\t},\n\n\tdeleteMany: (resource, params) => {\n\t\t// must call setDelParams() just before this to pass extra paramteres, like reassign, delete (file), etc.\n\t\tlet dirs = resource.split('/');\n\t\tif(dirs[1] && (dirs[0] == \"config\")){\t// /config\n\t\t\tdirs[0] = 'delconf';\n\t\t}else if(dirs[1] && (dirs[0] == \"library\")){\n\t\t\tdirs[0] = 'library/deleteID';\n\t\t}else{\n\t\t\t// bad apiFuction\n\t\t\treturn new Promise((resolve, reject) => { reject({status: 400, message: \"Bad Request: invalid API function\"}) });\n\t\t}\n\n\t\tlet promises = params.ids.map( (item) => {\n\t\t\tlet url = apiUrl + dirs.join('/') + '/' + item;\n\t\t\treturn httpClient(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(dataProv.delParams)\n\t\t\t}).then(() => (item));\n\t\t});\n\t\t\n\t\treturn Promise.all(promises).then((results) => { \n\t\t\tdataProv.delParams = {};\n\t\t\treturn { data: results }; \n\t\t});\t\t\n\t},\n\t\n\tgenPasswordHash: (resource, params) => {\n\t\treturn httpClient(\"/genpass\", {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({password: params.password})\n\t\t}).then(({ json }) => ({\n\t\t\tpassword: json.hash,\n\t\t\tsalt: json.salt\n\t\t}));\n\t},\n\t\n\t// custom function to set the default automation location ID used by API queries\n\tsetLoc: (locName) => { dataProv.locName = locName; },\n\t\n\t// custom function to set extra parameters for deleting library items, such as \n\tsetDelParams: (paramObj) => { dataProv.delParams = paramObj }\n};\n\nexport default dataProv;\n","var auth = {\n\tcred: {},\n\t\n\t// called when the user attempts to log in\n\tlogin: ({ username, password }) => {\n\t\tconst request = new Request('auth', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({ username, password }),\n\t\t\theaders: new Headers({ 'Content-Type': 'application/json' }),\n\t\t});\n\t\treturn fetch(request).then(response => {\n\t\t\tif((response.status < 200) || (response.status >= 300)){\n\t\t\t\tthrow new Error(response.statusText);\n\t\t\t}\n\t\t\treturn response.json();\n\t\t}).then(obj => {\n\t\t\tauth.cred = obj;\n\t\t\treturn Promise.resolve();\n\t\t});\n\t},\n\t\n\t// called when the user clicks on the logout button\n\tlogout: () => {\n\t\treturn fetch('/unauth').then(response => {\n\t\t\tauth.cred = {};\n\t\t\treturn Promise.resolve();\n\t\t}).catch(err => {\n\t\t\tauth.cred = {};\n\t\t\treturn Promise.resolve();\n\t\t});\n\t},\n\t\n\t// called when the API returns an error\n\tcheckError: ({ status }) => {\n\tif(status === 401 || status === 403) {\n\t\t\tauth.cred = {};\n\t\t\treturn Promise.reject();\n\t\t}\n\t\treturn Promise.resolve();\n\t},\n\t\n\t// called when the user navigates to a new location, to check for authentication\n\tcheckAuth: () => {\n\t\tif(auth.cred.username){\n\t\t\treturn Promise.resolve();\n\t\t}else{\n\t\t\t// check with the uiserver, to allow login servival after javascript app reload\n\t\t\treturn auth.checkWho().then(() => {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}).catch(() => {\n\t\t\t\treturn Promise.reject();\n\t\t\t});\n\t\t}\n\t},\n\t\n\t// called when the user navigates to a new location, to check for permissions / roles\n\tgetPermissions: () => {\n\t\tif(auth.cred.permission){\n\t\t\treturn Promise.resolve(auth.cred.permission);\n\t\t}else{\n\t\t\t// check with the uiserver, to allow login servival after javascript app reload\n\t\t\treturn auth.checkWho().then(() => {\n\t\t\t\treturn Promise.resolve(auth.cred.permission);\n\t\t\t}).catch(() => {\n\t\t\t\treturn Promise.reject();\n\t\t\t});\n\t\t}\n\t},\n\t\n\tgetIdentity: () => {\n\t\tif(auth.cred.username){\n\t\t\treturn Promise.resolve({fullName: auth.cred.username});\n\t\t}else{\n\t\t\t// check with the uiserver, to allow login servival after javascript app reload\n\t\t\treturn auth.checkWho().then(() => {\n\t\t\t\treturn Promise.resolve({fullName: auth.cred.username});\n\t\t\t}).catch(() => {\n\t\t\t\treturn Promise.reject();\n\t\t\t});\n\t\t}\n\t},\n\t\n\tcheckWho: () => {\n\t\treturn fetch('who').then(response => {\n\t\t\tif((response.status < 200) || (response.status >= 300)){\n\t\t\t\tauth.cred = {};\n\t\t\t\treturn Promise.reject();\n\t\t\t}\n\t\t\treturn response.json();\n\t\t}).then(obj => {\n\t\t\tauth.cred = obj;\n\t\t\treturn Promise.resolve();\n\t\t}).catch(() => {\n\t\t\tauth.cred = {};\n\t\t\treturn Promise.reject();\n\t\t});\n\t}\n\n};\n\nexport default auth;\n","import * as React from \"react\";\nimport { useMediaQuery } from '@material-ui/core';\nimport dataProvider from './dataProvider';\nimport { \n\tList,\n\tSimpleForm,\n\tSimpleList,\n\tDatagrid, \n\tTextField, \n\tTextInput, \n\tPasswordInput,\n\tSelectInput,\n\tEditButton,\n\tEdit,\n\tCreate\n} from 'react-admin';\n\nconst UserTitle = ({ record }) => {\n\treturn <span>User {record ? `\"${record.id}\"` : 'Create New'}</span>;\n};\n\nexport const UserList = ({ permissions, ...props }) => {\n\tconst isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n\treturn (\n\t\t<List exporter={false} {...props}>\n\t\t\t{isSmall ? (\n\t\t\t\t<SimpleList\n\t\t\t\t\tprimaryText={record => record.id}\n\t\t\t\t\tsecondaryText={record => permissions === 'admin' ? record.permission : null}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Datagrid rowClick=\"edit\">\n\t\t\t\t\t<TextField source=\"id\" label=\"Username\" sortable={false}/>\n\t\t\t\t\t{permissions === 'admin' && <TextField source=\"permission\" label=\"Permission\" sortable={false}/>}\n\t\t\t\t\t{permissions === 'admin' && <EditButton />}\n\t\t\t\t</Datagrid>\n\t\t\t)}\n\t\t</List>\n\t);\n};\n\nexport const UserEdit = props => {\n\tfunction transform(data) {\n\t\tif(data.newpassword){\n\t\t\t// request password change\n\t\t\treturn dataProvider.genPasswordHash('', { password: data.newpassword })\n\t\t\t\t.then(( resp ) => {\n\t\t\t\t\tdata.salt = resp.salt;\n\t\t\t\t\tdata.password = resp.password;\n\t\t\t\t\tdelete data.newpassword;\n\t\t\t\t\treturn data;\n\t\t\t\t});\n\t\t}else{\n\t\t\tdelete data.password;\n\t\t\tdelete data.salt;\n\t\t\tdelete data.newpassword;\n\t\t}\n\t\treturn data;\n\t};\n\n\treturn (\n\t\t<Edit title={<UserTitle />} transform={transform} {...props}>\n\t\t\t<SimpleForm>\n\t\t\t\t<TextInput disabled label=\"Username\" source=\"id\" />\n\t\t\t\t<PasswordInput label=\"Change Password to\" source=\"newpassword\" />\n\t\t\t\t<SelectInput source=\"permission\" choices={[\n\t\t\t\t\t{ id: 'admin', name: 'Administrator (All)' },\n\t\t\t\t\t{ id: 'manager', name: 'Manager (Studio, Library, Traffic)' },\n\t\t\t\t\t{ id: 'production', name: 'Production (Library, Traffic)' },\n\t\t\t\t\t{ id: 'programming', name: 'Programming (Studio, Library)' },\n\t\t\t\t\t{ id: 'traffic', name: 'Traffic' },\n\t\t\t\t\t{ id: 'library', name: 'Library' },\n\t\t\t\t\t{ id: 'studio', name: 'Studio' },\n\t\t\t\t]} />\n\t\t\t</SimpleForm>\n\t\t</Edit>\n\t);\n};\n\nexport const UserCreate = props => {\n\tfunction transform(data) {\n\t\tif(data.newpassword){\n\t\t\t// request password change\n\t\t\treturn dataProvider.genPasswordHash('', { password: data.newpassword })\n\t\t\t\t.then(( resp ) => {\n\t\t\t\t\tdata.salt = resp.salt;\n\t\t\t\t\tdata.password = resp.password;\n\t\t\t\t\tdelete data.newpassword;\n\t\t\t\t\treturn data;\n\t\t\t\t});\n\t\t}else{\n\t\t\tdelete data.password;\n\t\t\tdelete data.salt;\n\t\t\tdelete data.newpassword;\n\t\t}\n\t\treturn data;\n\t};\n\t\n\tfunction validateUserCreation(values) {\n\t\tconst errors = {};\n\t\tif(!values.id) \n\t\t\terrors.id = 'Username is required';\n\t\tif(!values.newpassword)\n\t\t\terrors.newpassword = 'Password is required';\n\t\treturn errors\n\t};\n\t\n\treturn (\n\t\t<Create title={<UserTitle />} transform={transform} {...props}>\n\t\t\t<SimpleForm  validate={validateUserCreation} >\n\t\t\t\t<TextInput label=\"Username\" source=\"id\" />\n\t\t\t\t<PasswordInput label=\"Password\" source=\"newpassword\" />\n\t\t\t\t<SelectInput source=\"permission\" initialValue=\"manager\" choices={[\n\t\t\t\t\t{ id: 'admin', name: 'Administrator (All)' },\n\t\t\t\t\t{ id: 'manager', name: 'Manager (Studio, Library, Traffic)' },\n\t\t\t\t\t{ id: 'production', name: 'Production (Library, Traffic)' },\n\t\t\t\t\t{ id: 'programming', name: 'Programming (Studio, Library)' },\n\t\t\t\t\t{ id: 'traffic', name: 'Traffic' },\n\t\t\t\t\t{ id: 'library', name: 'Library' },\n\t\t\t\t\t{ id: 'studio', name: 'Studio' },\n\t\t\t\t]} />\n\t\t\t</SimpleForm>\n\t\t</Create>\n\t);\n};\n","import * as React from \"react\";\nimport { useMediaQuery } from '@material-ui/core';\nimport { \n\tList,\n\tSimpleForm,\n\tSimpleList,\n\tDatagrid, \n\tTextField, \n\tTextInput, \n\tEditButton,\n\tEdit,\n\tCreate\n} from 'react-admin';\n\nconst FileTitle = ({ record }) => {\n\treturn <span>File {record ? `\"${record.id}\"` : 'Create New'}</span>;\n};\n\nexport const FileList = ({ permissions, ...props }) => {\n\tconst isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n\treturn (\n\t\t<List exporter={false} {...props}>\n\t\t\t{isSmall ? (\n\t\t\t\t<SimpleList\n\t\t\t\t\tprimaryText={record => record.id}\n\t\t\t\t\tsecondaryText={record => permissions === 'admin' ? '${record.value}' : null}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Datagrid rowClick=\"edit\">\n\t\t\t\t\t<TextField source=\"id\" label=\"Property\" sortable={false}/>\n\t\t\t\t\t{permissions === 'admin' && <TextField source=\"value\" label=\"Value\" sortable={false}/>}\n\t\t\t\t\t{permissions === 'admin' && <EditButton />}\n\t\t\t\t</Datagrid>\n\t\t\t)}\n\t\t</List>\n\t);\n};\n\nexport const FileEdit = props => (\n\t<Edit title={<FileTitle />} {...props}>\n\t\t<SimpleForm>\n\t\t\t<TextInput disabled label=\"Property\" source=\"id\" />\n\t\t\t<TextInput label=\"Value\" source=\"value\" />\n\t\t</SimpleForm>\n\t</Edit>\n);\n\nexport const FileCreate = props => (\n\t<Create title={<FileTitle />} {...props}>\n\t\t<SimpleForm>\n\t\t\t<TextInput label=\"Property\" source=\"id\" />\n\t\t\t<TextInput label=\"Value\" source=\"value\" />\n\t\t</SimpleForm>\n\t</Create>\n);\n","import * as React from \"react\";\nimport { useMediaQuery } from '@material-ui/core';\nimport { \n\tList,\n\tSimpleForm,\n\tSimpleList,\n\tDatagrid, \n\tTextField, \n\tTextInput, \n\tEditButton,\n\tEdit,\n\tCreate\n} from 'react-admin';\n\nconst HttpTitle = ({ record }) => {\n\treturn <span>Http {record ? `\"${record.id}\"` : 'Create New'}</span>;\n};\n\nexport const HttpList = ({ permissions, ...props }) => {\n\tconst isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n\treturn (\n\t\t<List exporter={false} {...props}>\n\t\t\t{isSmall ? (\n\t\t\t\t<SimpleList\n\t\t\t\t\tprimaryText={record => record.id}\n\t\t\t\t\tsecondaryText={record => permissions === 'admin' ? '${record.value}' : null}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Datagrid rowClick=\"edit\">\n\t\t\t\t\t<TextField source=\"id\" label=\"Property\" sortable={false}/>\n\t\t\t\t\t{permissions === 'admin' && <TextField source=\"value\" label=\"Value\" sortable={false}/>}\n\t\t\t\t\t{permissions === 'admin' && <EditButton />}\n\t\t\t\t</Datagrid>\n\t\t\t)}\n\t\t</List>\n\t);\n};\n\nexport const HttpEdit = props => (\n\t<Edit title={<HttpTitle />} {...props}>\n\t\t<SimpleForm>\n\t\t\t<TextInput disabled label=\"Property\" source=\"id\" />\n\t\t\t<TextInput label=\"Value\" source=\"value\" />\n\t\t</SimpleForm>\n\t</Edit>\n);\n\nexport const HttpCreate = props => (\n\t<Create title={<HttpTitle />} {...props}>\n\t\t<SimpleForm>\n\t\t\t<TextInput label=\"Property\" source=\"id\" />\n\t\t\t<TextInput label=\"Value\" source=\"value\" />\n\t\t</SimpleForm>\n\t</Create>\n);\n","import * as React from \"react\";\nimport { useMediaQuery } from '@material-ui/core';\nimport { \n\tList,\n\tSimpleForm,\n\tSimpleList,\n\tDatagrid, \n\tTextField, \n\tTextInput, \n\tEditButton,\n\tEdit,\n\tCreate\n} from 'react-admin';\n\nconst LibraryTitle = ({ record }) => {\n\treturn <span>Library {record ? `\"${record.id}\"` : 'Create New'}</span>;\n};\n\nexport const LibraryList = ({ permissions, ...props }) => {\n\tconst isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n\treturn (\n\t\t<List exporter={false} {...props}>\n\t\t\t{isSmall ? (\n\t\t\t\t<SimpleList\n\t\t\t\t\tprimaryText={record => record.id}\n\t\t\t\t\tsecondaryText={record => permissions === 'admin' ? '${record.value}' : null}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Datagrid rowClick=\"edit\">\n\t\t\t\t\t<TextField source=\"id\" label=\"Property\" sortable={false}/>\n\t\t\t\t\t{permissions === 'admin' && <TextField source=\"value\" label=\"Value\" sortable={false}/>}\n\t\t\t\t\t{permissions === 'admin' && <EditButton />}\n\t\t\t\t</Datagrid>\n\t\t\t)}\n\t\t</List>\n\t);\n};\n\nexport const LibraryEdit = props => (\n\t<Edit title={<LibraryTitle />} {...props}>\n\t\t<SimpleForm>\n\t\t\t<TextInput disabled label=\"Property\" source=\"id\" />\n\t\t\t<TextInput label=\"Value\" source=\"value\" />\n\t\t</SimpleForm>\n\t</Edit>\n);\n\nexport const LibraryCreate = props => (\n\t<Create title={<LibraryTitle />} {...props}>\n\t\t<SimpleForm>\n\t\t\t<TextInput label=\"Property\" source=\"id\" />\n\t\t\t<TextInput label=\"Value\" source=\"value\" />\n\t\t</SimpleForm>\n\t</Create>\n);\n","import * as React from \"react\";\nimport { useMediaQuery } from '@material-ui/core';\nimport { \n\tList,\n\tSimpleForm,\n\tSimpleList,\n\tDatagrid, \n\tTextField, \n\tNumberField,\n\tTextInput, \n\tNumberInput,\n\tEditButton,\n\tEdit,\n\tCreate\n} from 'react-admin';\n\nconst StudioTitle = ({ record }) => {\n\treturn <span>Studio {record ? `\"${record.id}\"` : 'Create New'}</span>;\n};\n\nexport const StudioList = ({ permissions, ...props }) => {\n\tconst isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n\treturn (\n\t\t<List exporter={false} {...props}>\n\t\t\t{isSmall ? (\n\t\t\t\t<SimpleList\n\t\t\t\t\tprimaryText={record => record.id}\n\t\t\t\t\tsecondaryText={record => permissions === 'admin' ? '${record.host}:${record.port}' : null}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Datagrid rowClick=\"edit\">\n\t\t\t\t\t<TextField source=\"id\" label=\"Name\" sortable={false}/>\n\t\t\t\t\t{permissions === 'admin' && <TextField source=\"host\" label=\"Host Address\" sortable={false}/>}\n\t\t\t\t\t{permissions === 'admin' && <NumberField source=\"port\" label=\"Port Number\" sortable={false}/>}\n\t\t\t\t\t{permissions === 'admin' && <EditButton />}\n\t\t\t\t</Datagrid>\n\t\t\t)}\n\t\t</List>\n\t);\n};\n\nexport const StudioEdit = props => (\n\t<Edit title={<StudioTitle />} {...props}>\n\t\t<SimpleForm>\n\t\t\t<TextInput disabled label=\"Name\" source=\"id\" />\n\t\t\t<TextInput label=\"Host Address\" source=\"host\" />\n\t\t\t<NumberInput label=\"Port Number\" source=\"port\" />\n\t\t\t<TextInput label=\"Run Command\" source=\"run\" />\n\t\t\t<NumberInput label=\"Max. Connections\" source=\"maxpool\" />\n\t\t\t<NumberInput label=\"Min. Connections\" source=\"minpool\" />\n\t\t</SimpleForm>\n\t</Edit>\n);\n\nexport const StudioCreate = props => (\n\t<Create title={<StudioTitle />} {...props}>\n\t\t<SimpleForm>\n\t\t\t<TextInput label=\"Name\" source=\"id\" />\n\t\t\t<TextInput label=\"Host Address\" source=\"host\" defaultValue={\"localhost\"} />\n\t\t\t<NumberInput label=\"Port Number\" source=\"port\" defaultValue={9550}/>\n\t\t\t<TextInput label=\"Run Command\" source=\"run\" />\n\t\t\t<NumberInput label=\"Max. Connections\" source=\"maxpool\" defaultValue={5} />\n\t\t\t<NumberInput label=\"Min. Connections\" source=\"minpool\" defaultValue={2} />\n\t\t</SimpleForm>\n\t</Create>\n);\n","import * as React from \"react\";\nimport { useMediaQuery } from '@material-ui/core';\nimport dataProvider from './dataProvider';\nimport { \n\tList,\n\tFilter,\n\tSimpleForm,\n\tSimpleList,\n\tDatagrid, \n\tTextField, \n\tTextInput, \n\tSelectInput,\n\tEditButton,\n\tEdit,\n\tCreate\n} from 'react-admin';\n\nconst BrowseTitle = ({ record }) => {\n\treturn <span>Item {record ? `\"${record.id}\"` : 'Create New'}</span>;\n};\nconst PostFilter = (props) => (\n\t<Filter {...props}>\n\t\t<TextInput label=\"Match\" source=\"q\" alwaysOn />\n\t\t<SelectInput label=\"Type\" source=\"type\" alwaysOn initialValue=\"artist\" choices={[\n\t\t\t{ id: 'artist', name: 'Artist' },\n\t\t\t{ id: 'album', name: 'Album' },\n\t\t\t{ id: 'title', name: 'Title' },\n\t\t\t{ id: 'category', name: 'Category' },\n\t\t\t{ id: 'playlist', name: 'Playlist' },\n\t\t\t{ id: 'task', name: 'Task' },\n\t\t\t{ id: 'comment', name: 'Comment' },\n\t\t\t{ id: 'missing', name: 'Missing' },\n\t\t\t{ id: 'rested', name: 'Rested' },\n\t\t\t{ id: 'added', name: 'Added' }\n\t\t]} />\n\t\t<TextInput/>\n\t</Filter>\n);\n\nexport const BrowseList = ({ permissions, ...props }) => {\n\tconst isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n\treturn (\n\t\t<List exporter={false} filters={<PostFilter />} {...props}>\n\t\t\t{isSmall ? (\n\t\t\t\t<SimpleList\n\t\t\t\t\tprimaryText={record => record.Label}\n\t\t\t\t\tsecondaryText={record => record.Duration}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Datagrid rowClick=\"edit\">\n\t\t\t\t\t<TextField source=\"Label\" label=\"Name\" />\n\t\t\t\t\t<TextField source=\"Duration\" label=\"Duration\" />\n\t\t\t\t</Datagrid>\n\t\t\t)}\n\t\t</List>\n\t);\n};\n\nexport const BrowseEdit = props => {\n\treturn (\n\t\t<Edit title={<BrowseTitle />} {...props}>\n\t\t\t<SimpleForm>\n\t\t\t\t<TextInput disabled label=\"Username\" source=\"id\" />\n\t\t\t\t<SelectInput source=\"permission\" choices={[\n\t\t\t\t\t{ id: 'admin', name: 'Administrator (All)' },\n\t\t\t\t\t{ id: 'manager', name: 'Manager (Studio, Library, Traffic)' },\n\t\t\t\t\t{ id: 'production', name: 'Production (Library, Traffic)' },\n\t\t\t\t\t{ id: 'programming', name: 'Programming (Studio, Library)' },\n\t\t\t\t\t{ id: 'traffic', name: 'Traffic' },\n\t\t\t\t\t{ id: 'library', name: 'Library' },\n\t\t\t\t\t{ id: 'studio', name: 'Studio' },\n\t\t\t\t]} />\n\t\t\t</SimpleForm>\n\t\t</Edit>\n\t);\n};\n\nexport const BrowseCreate = props => {\n\treturn (\n\t\t<Create title={<BrowseTitle />} {...props}>\n\t\t\t<SimpleForm >\n\t\t\t\t<TextInput label=\"Username\" source=\"id\" />\n\t\t\t\t<SelectInput source=\"permission\" initialValue=\"manager\" choices={[\n\t\t\t\t\t{ id: 'admin', name: 'Administrator (All)' },\n\t\t\t\t\t{ id: 'manager', name: 'Manager (Studio, Library, Traffic)' },\n\t\t\t\t\t{ id: 'production', name: 'Production (Library, Traffic)' },\n\t\t\t\t\t{ id: 'programming', name: 'Programming (Studio, Library)' },\n\t\t\t\t\t{ id: 'traffic', name: 'Traffic' },\n\t\t\t\t\t{ id: 'library', name: 'Library' },\n\t\t\t\t\t{ id: 'studio', name: 'Studio' },\n\t\t\t\t]} />\n\t\t\t</SimpleForm>\n\t\t</Create>\n\t);\n};\n","// in src/App.js\nimport * as React from \"react\";\n//import jsonServerProvider from 'ra-data-json-server';\n//const dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com');\nimport dataProvider from './dataProvider';\nimport authProvider from './authProvider';\nimport { Admin, Resource, AppBar, Layout, ReferenceInput, SelectInput, EditGuesser, ListGuesser } from 'react-admin';\nimport { UserList, UserEdit, UserCreate } from './users';\nimport { FileList, FileEdit, FileCreate } from './files';\nimport { HttpList, HttpEdit, HttpCreate } from './http';\nimport { LibraryList, LibraryEdit, LibraryCreate } from './library';\nimport { StudioList, StudioEdit, StudioCreate } from './studios';\nimport { BrowseList, BrowseEdit, BrowseCreate } from './browse';\nimport { ConfUsersList } from './confUsers';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MicIcon from '@material-ui/icons/Mic';\n\nconst useStyles = makeStyles({\n\ttitle: {\n\t\tflex: 1,\n\t\ttextOverflow: 'ellipsis',\n\t\twhiteSpace: 'nowrap',\n\t\toverflow: 'hidden',\n\t},\n\tspacer: {\n\t\tflex: 1,\n\t},\n});\n\nconst MyAppBar = props => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<AppBar {...props}>\n\t\t\t<Typography\n\t\t\t\tvariant=\"h6\"\n\t\t\t\tcolor=\"inherit\"\n\t\t\t\tclassName={classes.title}\n\t\t\t\tid=\"react-admin-title\"\n\t\t\t/>\n\t\t\tAudioRack4\n\t\t\t<span className={classes.spacer} />\n\t\t</AppBar>\n\t);\n};\n\nconst MyLayout = (props) => <Layout {...props} appBar={MyAppBar} />;\n\nconst App = () => (\n\t<Admin layout={MyLayout} authProvider={authProvider} dataProvider={dataProvider} disableTelemetry>\n\t\t{permissions => [\n\t\t\tpermissions === 'admin'\n\t\t\t?\t<Resource name=\"config/files\" \n\t\t\t\t\tlist={FileList} \n\t\t\t\t\tedit={permissions === 'admin' ? FileEdit : null}\n\t\t\t\t\tcreate={permissions === 'admin' ? FileCreate : null} \n\t\t\t\t\toptions={{ label: 'file settings' }} \n\t\t\t\t\ticon={SettingsIcon} \n\t\t\t\t/>\n\t\t\t: null,\n\t\t\t\n\t\t\tpermissions === 'admin'\n\t\t\t?\t<Resource name=\"config/users\" \n\t\t\t\t\tlist={UserList} \n\t\t\t\t\tedit={permissions === 'admin' ? UserEdit : null}\n\t\t\t\t\tcreate={permissions === 'admin' ? UserCreate : null} \n\t\t\t\t\toptions={{ label: 'user settings' }} \n\t\t\t\t\ticon={SettingsIcon} \n\t\t\t\t/>\n\t\t\t: null,\n\t\t\t\n\t\t\tpermissions === 'admin'\n\t\t\t?\t<Resource name=\"config/http\" \n\t\t\t\t\tlist={HttpList} \n\t\t\t\t\tedit={permissions === 'admin' ? HttpEdit : null}\n\t\t\t\t\tcreate={permissions === 'admin' ? HttpCreate : null} \n\t\t\t\t\toptions={{ label: 'http settings' }} \n\t\t\t\t\ticon={SettingsIcon} \n\t\t\t\t/>\n\t\t\t: null,\n\n\t\t\tpermissions === 'admin'\n\t\t\t?\t<Resource name=\"config/library\" \n\t\t\t\t\tlist={LibraryList} \n\t\t\t\t\tedit={permissions === 'admin' ? LibraryEdit : null}\n\t\t\t\t\tcreate={permissions === 'admin' ? LibraryCreate : null} \n\t\t\t\t\toptions={{ label: 'library settings' }} \n\t\t\t\t\ticon={SettingsIcon} \n\t\t\t\t/>\n\t\t\t: null,\n\t\t\t\n\t\t\tpermissions === 'admin'\n\t\t\t?\t<Resource name=\"config/studios\" \n\t\t\t\t\tlist={StudioList} \n\t\t\t\t\tedit={permissions === 'admin' ? StudioEdit : null}\n\t\t\t\t\tcreate={permissions === 'admin' ? StudioCreate : null} \n\t\t\t\t\toptions={{ label: 'studio settings' }} \n\t\t\t\t\ticon={SettingsIcon} \n\t\t\t\t/>\n\t\t\t: null,\n\t\t\t\n\t\t\t<Resource name=\"library/browse\" \n\t\t\t\tlist={BrowseList} \n\t\t\t\toptions={{ label: 'Library' }} \n\t\t\t\ticon={LibraryMusicIcon} \n\t\t\t/>,\n\t\t\t\n\t\t\t// hidden resources\n\t\t\t<Resource name=\"library/get/locations\" />\n\t\t]}\n\t</Admin>\n);\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}